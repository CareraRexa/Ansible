---
# ===== playbooks/10-setup-monitoring.yml =====
- name: Setup Monitoring
  hosts: 192.168.2.50
  become: yes
  tasks:
    - name: Create monitoring namespace
      kubernetes.core.k8s:
        name: monitoring
        api_version: v1
        kind: Namespace
        state: present

    - name: Create Prometheus PVC
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: prometheus-pvc
            namespace: monitoring
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi

    - name: Create Grafana PVC
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: grafana-pvc
            namespace: monitoring
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 2Gi

    # Deploy Prometheus
    - name: Deploy Prometheus
      kubernetes.core.k8s:
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: prometheus
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: prometheus
            template:
              metadata:
                labels:
                  app: prometheus
              spec:
                containers:
                - name: prometheus
                  image: prom/prometheus:latest
                  ports:
                  - containerPort: 9090
                  args:
                    - '--config.file=/etc/prometheus/prometheus.yml'
                    - '--storage.tsdb.path=/prometheus'
                    - '--storage.tsdb.retention.time=30d'
                  volumeMounts:
                  - name: config
                    mountPath: /etc/prometheus
                  - name: storage
                    mountPath: /prometheus
                volumes:
                - name: config
                  configMap:
                    name: prometheus-config
                - name: storage
                  persistentVolumeClaim:
                    claimName: prometheus-pvc

    # Prometheus Config
    - name: Create Prometheus Config
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: prometheus-config
            namespace: monitoring
          data:
            prometheus.yml: |
              global:
                scrape_interval: 15s
              scrape_configs:
                - job_name: 'prometheus'
                  static_configs:
                    - targets: ['localhost:9090']
                - job_name: 'kubernetes-pods'
                  kubernetes_sd_configs:
                  - role: pod
                  relabel_configs:
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    action: keep
                    regex: true

    # Prometheus Service
    - name: Create Prometheus Service
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: prometheus-service
            namespace: monitoring
          spec:
            selector:
              app: prometheus
            ports:
            - port: 9090
              targetPort: 9090
            type: ClusterIP

    # Deploy Grafana
    - name: Deploy Grafana
      kubernetes.core.k8s:
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: grafana
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: grafana
            template:
              metadata:
                labels:
                  app: grafana
              spec:
                containers:
                - name: grafana
                  image: grafana/grafana:latest
                  ports:
                  - containerPort: 3000
                  env:
                  - name: GF_SECURITY_ADMIN_USER
                    value: "gwenchana"
                  - name: GF_SECURITY_ADMIN_PASSWORD
                    value: "fighting"
                  volumeMounts:
                  - name: storage
                    mountPath: /var/lib/grafana
                volumes:
                - name: storage
                  persistentVolumeClaim:
                    claimName: grafana-pvc

    # Grafana LoadBalancer Service
    - name: Create Grafana Service
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: grafana-service
            namespace: monitoring
          spec:
            selector:
              app: grafana
            ports:
            - port: 80
              targetPort: 3000
            type: LoadBalancer
            loadBalancerIP: "192.168.4.72"

    # Grafana Ingress
    - name: Create Grafana Ingress
      kubernetes.core.k8s:
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: grafana-ingress
            namespace: monitoring
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
            - host: grafana.wap.local
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: grafana-service
                      port:
                        number: 80
